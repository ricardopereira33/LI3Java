#BlueJ class context
comment0.params=primeiro
comment0.target=ParIntSet(int)
comment0.text=\r\n\ Construtor\ por\ par\u00E2metro.\r\n\ @param\ primeiro\r\n
comment1.params=p
comment1.target=ParIntSet(ParIntSet)
comment1.text=\r\n\ Construtor\ por\ par\u00E2metros.\r\n\ @param\ p\r\n
comment2.params=x
comment2.target=void\ addPrimeiro(int)
comment2.text=\r\n\ Fun\u00E7\u00E3o\ que\ aumenta\ o\ primeiro\ elemento.\r\n\ @param\ x\r\n
comment3.params=str
comment3.target=void\ addSegundo(java.lang.String)
comment3.text=\r\n\ Fun\u00E7\u00E3o\ que\ adiciona\ ao\ segundo.\r\n\ @param\ str\r\n
comment4.params=
comment4.target=int\ getPrimeiro()
comment4.text=\r\n\ Fun\u00E7\u00E3o\ que\ retorna\ o\ primeiro.\r\n\ @return\r\n
comment5.params=
comment5.target=java.util.Set\ getSegundo()
comment5.text=\r\n\ Fun\u00E7\u00E3o\ que\ retorna\ o\ segundo.\r\n\ @return\r\n
comment6.params=
comment6.target=int\ getTamanhoSegundo()
comment6.text=\r\n\ Fun\u00E7\u00E3o\ que\ retorna\ o\ tamanho\ do\ segundo(lista).\r\n\ @return\r\n
comment7.params=obj
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\r\n\ Fun\u00E7\u00E3o\ que\ testa\ a\ igualdade.\r\n\ @param\ obj\r\n\ @return\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\r\n\ Fun\u00E7\u00E3o\ para\ imprimir.\r\n\ @return\r\n
comment9.params=
comment9.target=ParIntSet\ clone()
comment9.text=\r\n\ Fun\u00E7\u00E3o\ que\ faz\ um\ clone.\r\n
numComments=10
