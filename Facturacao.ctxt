#BlueJ class context
comment0.params=
comment0.target=Facturacao()
comment0.text=\r\n\ Construtor\ vazio.\r\n
comment1.params=v
comment1.target=void\ insereVenda(Venda)
comment1.text=\ Insere\ uma\ venda\ na\ Factura\u00E7\u00E3o.\r\n\ @param\ v\r\n
comment10.params=prods
comment10.target=void\ getProdMaisVendidos(java.util.Set)
comment10.text=\ Calcula\ para\ cada\ Produto,\ o\ n\u00FAmero\ de\ unidades\ compradas.\r\n\ @param\ prods\r\n
comment2.params=prod
comment2.target=boolean\ existeProd(java.lang.String)
comment2.text=\ Verifica\ se\ um\ Produto\ existe\ na\ Factura\u00E7\u00E3o.\r\n\ @param\ prod\r\n\ @return\ \r\n
comment3.params=
comment3.target=void\ limpar()
comment3.text=\ Apaga\ a\ lista\ dos\ produtos\ da\ Factura\u00E7\u00E3o.\r\n
comment4.params=
comment4.target=java.util.List\ getFactProdutos()
comment4.text=\ Retorna\ um\ clone\ da\ Factura\u00E7\u00E3o.\r\n\ @return\r\n
comment5.params=letra
comment5.target=int\ calculaIndice(char)
comment5.text=\ Calcula\ o\ \u00EDndice\ da\ lista\ correspondente\ a\ uma\ determinada\ letra.\ \r\n\ @param\ letra\r\n\ @return\r\n
comment6.params=
comment6.target=int\ nProdDif()
comment6.text=\ Calcula\ o\ n\u00FAmero\ de\ produtos\ diferentes\ comprados.\ \r\n\ @return\r\n
comment7.params=
comment7.target=double\ total()
comment7.text=\ Calcula\ o\ total\ Facturado.\r\n\ @return\r\n
comment8.params=
comment8.target=int\ zeros()
comment8.text=\ Calcula\ o\ total\ de\ compras\ de\ valor\ igual\ a\ 0.\r\n\ @return\r\n
comment9.params=lista\ prod
comment9.target=java.util.List\ getNumVendasFactTotal(java.util.List,\ java.lang.String)
comment9.text=\ Calcula\ para\ cada\ m\u00EAs,\ o\ n\u00FAmero\ de\ vendas\ e\ o\ total\ facturado\ com\ um\ dado\ produto.\r\n\ @param\ lista\r\n\ @param\ prod\r\n\ @return\r\n
numComments=11
