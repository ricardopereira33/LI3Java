#BlueJ class context
comment0.params=
comment0.target=CatProdutos()
comment0.text=\n\ Construtor\ vazio\ do\ Cat\u00E1logo\ de\ Produtos.\n
comment1.params=collection
comment1.target=CatProdutos(java.util.Collection)
comment1.text=\n\ Construtor\ por\ par\u00E2metros\ do\ Cat\u00E1logo\ de\ Produtos.\n\ @param\ collection\n
comment10.params=produto
comment10.target=void\ removeProduto(java.lang.String)
comment10.text=\n\ Fun\u00E7\u00E3o\ que\ remove\ um\ produto\ do\ cat\u00E1logo.\n\ @param\ produto\n
comment11.params=produto
comment11.target=boolean\ existeProduto(java.lang.String)
comment11.text=\n\ Fun\u00E7\u00E3o\ que\ determina\ a\ exist\u00EAncia\ ou\ n\u00E3o\ de\ um\ produto\ no\ cat\u00E1logo.\n\ @param\ produto\n\ @return\ boolean\n
comment12.params=
comment12.target=CatProdutos\ clone()
comment12.text=\n\ Fun\u00E7\u00E3o\ que\ faz\ clone\ do\ Cat\u00E1logo\ de\ Produtos.\n\ @return\ CatProdutos\n
comment13.params=obj
comment13.target=boolean\ equals(java.lang.Object)
comment13.text=\n\ Fun\u00E7\u00E3o\ que\ testa\ a\ igualdade.\n\ @param\ obj\n\ @return\ booelan\n
comment14.params=
comment14.target=void\ limpar()
comment14.text=\n\ Fun\u00E7\u00E3o\ que\ limpa\ o\ cat\u00E1logo.\n
comment2.params=catalogoProdutos
comment2.target=CatProdutos(CatProdutos)
comment2.text=\ \n\ Construtor\ por\ c\u00F3pia\ do\ Cat\u00E1logo\ de\ Produtos.\n\ @param\ catalogoProdutos\n
comment3.params=
comment3.target=java.util.List\ getCatalogo()
comment3.text=\n\ Fun\u00E7\u00E3o\ que\ retorna\ o\ cat\u00E1logo.\n\ @return\ List<Set<String>>\n
comment4.params=
comment4.target=java.util.List\ getProdutos()
comment4.text=\n\ Fun\u00E7\u00E3o\ que\ retorna\ a\ lista\ de\ Produtos.\n\ @return\ \ List<String>\n
comment5.params=letra
comment5.target=java.util.List\ getProdutosLetra(char)
comment5.text=\n\ Fun\u00E7\u00E3o\ que\ retorna\ uma\ lista\ de\ Produtos\ come\u00E7ados\ por\ uma\ determinada\ letra.\n\ @param\ letra\n\ @return\ List<String>\n
comment6.params=letra
comment6.target=int\ calculaIndice(char)
comment6.text=\n\ Fun\u00E7\u00E3o\ que\ calcula\ o\ \u00EDndice\ dado\ a\ primeira\ letra\ de\ um\ produto.\n\ @param\ letra\n\ @return\ int\n
comment7.params=
comment7.target=int\ totalProdutos()
comment7.text=\n\ Fun\u00E7\u00E3o\ que\ retorna\ o\ total\ de\ produtos\ presentes\ no\ Cat\u00E1logo.\n\ @return\ int\n
comment8.params=letra
comment8.target=int\ totalProdutosLetra(char)
comment8.text=\n\ Fun\u00E7\u00E3o\ que\ retorna\ o\ total\ de\ produtos\ de\ uma\ determinada\ letra\ presentes\ no\ Cat\u00E1logo.\n\ @param\ letra\n\ @return\ int\n
comment9.params=produto
comment9.target=void\ insereProduto(java.lang.String)
comment9.text=\n\ Fun\u00E7\u00E3o\ que\ insere\ um\ produto\ ao\ cat\u00E1logo.\n\ @param\ produto\n
numComments=15
