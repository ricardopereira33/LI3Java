#BlueJ class context
comment0.params=string\ numero
comment0.target=ParStringDouble(java.lang.String,\ java.lang.Double)
comment0.text=\r\n\ Construtor\ por\ par\u00E2metros.\r\n\ @param\ string\r\n\ @param\ numero\r\n
comment1.params=a
comment1.target=ParStringDouble(ParStringDouble)
comment1.text=\r\n\ Construtor\ por\ c\u00F3pia.\r\n\ @param\ a\r\n
comment2.params=
comment2.target=java.lang.String\ getString()
comment2.text=\r\n\ Fun\u00E7\u00E3o\ que\ retorna\ a\ String.\r\n\ @return\ String\r\n
comment3.params=
comment3.target=java.lang.Double\ getNumero()
comment3.text=\r\n\ Fun\u00E7\u00E3o\ que\ retorna\ o\ n\u00FAmero.\r\n\ @return\ Double\r\n
comment4.params=
comment4.target=ParStringDouble\ clone()
comment4.text=\r\n\ Fun\u00E7\u00E3o\ que\ faz\ um\ clone.\r\n\ @return\ ParStringDouble\r\n
comment5.params=obj
comment5.target=boolean\ equals(java.lang.Object)
comment5.text=\ \r\n\ Fun\u00E7\u00E3o\ que\ testa\ a\ igualdade.\r\n\ @param\ obj\r\n\ @return\ boolean\r\n
comment6.params=
comment6.target=java.lang.String\ toString()
comment6.text=\r\n\ Fun\u00E7\u00E3o\ para\ imprimir.\r\n\ @return\ String\r\n
numComments=7
