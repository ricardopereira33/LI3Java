#BlueJ class context
comment0.params=
comment0.target=Hipermercado()
comment0.text=\n\ Construtor\ vazio.\n
comment1.params=h
comment1.target=Hipermercado(Hipermercado)
comment1.text=\n\ Construtor\ por\ c\u00F3pia.\n\ @param\ h\n
comment10.params=fich
comment10.target=Hipermercado\ leObj(java.lang.String)
comment10.text=\n\ Iniciar\ a\ aplica\u00E7\u00E3o\ com\ o\ estado\ guardado\ num\ determinado\ ficheiro.\n\ @param\ fich\n\ @return\ Hipermercado\n
comment11.params=
comment11.target=java.util.Set\ getProdsNaoComp()
comment11.text=\n\ Fun\u00E7\u00E3o\ que\ retorna\ uma\ lista\ ordenada\ alfabeticamente\ com\ os\ c\u00F3digos\ dos\ produtos\n\ nunca\ comprados\ e\ o\ seu\ respectivo\ total.\n\ @return\ Set<String>\n
comment12.params=mes
comment12.target=ParIntInt\ getNumVendNumCliMes(int)
comment12.text=\n\ Fun\u00E7\u00E3o\ que\ dado\ um\ m\u00EAs\ v\u00E1lido,\ determina\ o\ n\u00FAmero\ total\ de\ vendas\ realizadas\n\ e\ o\ n\u00FAmero\ total\ de\ clientes\ distintos\ que\ as\ fizeram.\n\ @param\ mes\n\ @return\ ParIntInt\n
comment13.params=cli
comment13.target=java.util.List\ getNumCompNumProdTot(java.lang.String)
comment13.text=\n\ Fun\u00E7\u00E3o\ que\ dado\ um\ c\u00F3digo\ de\ cliente\ determina,\ para\ cada\ m\u00EAs,\n\ quantas\ compras\ este\ fez,\ quantos\ produtos\ distintos\ comprou\ e\ quando\ gastou\ no\ total.\n\ @param\ cli\n\ @return\ \ List<TriploIntIntDouble>\n
comment14.params=prod
comment14.target=java.util.List\ getNumCompNumCliTot(java.lang.String)
comment14.text=\n\ Fun\u00E7\u00E3o\ que\ dado\ o\ c\u00F3digo\ de\ um\ produto\ existente\ determina,\ m\u00EAs\ a\ m\u00EAs\n\ quantas\ vezes\ foi\ comprado,\ por\ quantos\ clientes\ diferentes\ e\ o\ total\ facturado.\n\ @param\ prod\n\ @return\ List<TriploIntIntDouble>\n
comment15.params=cli
comment15.target=java.util.TreeSet\ getProdsMaisComprados(java.lang.String)
comment15.text=\n\ Fun\u00E7\u00E3o\ que\ dado\ o\ c\u00F3digo\ de\ um\ cliente\ determina\ a\ lista\ de\ c\u00F3digos\ de\ produtos\n\ que\ mais\ comprou,\ ordenada\ por\ ordem\ decrescente\ de\ quantidade\ e,\ para\ quantidades\ iguais\n\ por\ ordem\ alfab\u00E9tica.\n\ @param\ cli\n\ @return\ TreeSet<ParStringInt>\n
comment16.params=x
comment16.target=java.util.TreeSet\ getProdsMaisVend(int)
comment16.text=\n\ Determina\ o\ conjunto\ dos\ N\ produtos\ mais\ vendido\ em\ todo\ o\ ano,\ indicando\ o\ n\u00FAmero\ total\n\ de\ clientes\ distintos\ que\ o\ compraram.\n\ @param\ x\n\ @return\ TreeSet<TriploStringIntInt>\n
comment17.params=
comment17.target=java.util.List\ getMaioresComp()
comment17.text=\n\ Determina\ para\ cada\ filial,\ a\ lista\ dos\ tr\u00EAs\ maiores\ compradores\ em\ termos\ de\ dinheiro\ facturado.\n\ @return\ List<List<ParStringDouble>>\n
comment18.params=x
comment18.target=java.util.TreeSet\ getCliMaisCompDif(int)
comment18.text=\n\ Determina\ os\ c\u00F3digos\ dos\ N\ clientes\ que\ compraram\ mais\ produtos\ diferentes.\n\ @param\ x\n\ @return\ TreeSet<ParStringInt>\n
comment19.params=prod\ x
comment19.target=java.util.TreeSet\ getCliMaisCompProd(java.lang.String,\ int)
comment19.text=\n\ Dado\ o\ c\u00F3digo\ de\ um\ produto,\ determinar\ o\ conjunto\ dos\ N\ clientes\ que\ mais\ o\ compraram,\ e\ para\ cada\ um\n\ indicar\ o\ valor\ gasto.\n\ @param\ prod\n\ @param\ x\n\ @return\ TreeSet<ParStringDouble>\n
comment2.params=
comment2.target=CatClientes\ getCatClientes()
comment2.text=\n\ Fun\u00E7\u00E3o\ que\ retorna\ o\ Cat\u00E1logo\ de\ Clientes.\n\ @return\ CatClientes\n
comment20.params=
comment20.target=Hipermercado\ clone()
comment20.text=\n\ Fun\u00E7\u00E3o\ que\ faz\ um\ clone.\n\ @return\ Hipermercado\n
comment21.params=lista\ filial
comment21.target=void\ getFactTotalMes(double[],\ int)
comment21.text=\ Guarda\ numa\ estrutura\ a\ factora\u00E7\u00E3o\ de\ cada\ m\u00EAs\ numa\ determinada\ filial.\n\ @param\ lista[]\n\ @param\ filial\n
comment22.params=cli\ mes\ filial
comment22.target=void\ getCliMes(java.util.Set,\ int,\ int)
comment22.text=\ Guarda\ numa\ estrutura\ os\ clientes\ que\ compraram\ num\ determinado\ m\u00EAs,\ numa\ determinada\ filial.\n\ @param\ cli\n\ @param\ mes\n\ @param\ filial\n
comment3.params=
comment3.target=CatProdutos\ getCatProdutos()
comment3.text=\n\ Fun\u00E7\u00E3o\ que\ retorna\ o\ Cat\u00E1logo\ de\ Produtos.\n\ @return\ CatProdutos\n
comment4.params=
comment4.target=Facturacao\ getFacturacao()
comment4.text=\n\ Fun\u00E7\u00E3o\ que\ retorna\ a\ factura\u00E7\u00E3o.\n\ @return\ Facturacao\n
comment5.params=
comment5.target=java.util.List\ getFilial()
comment5.text=\n\ Fun\u00E7\u00E3o\ que\ retorna\ as\ filiais.\n\ @return\ List<Filial>\n
comment6.params=
comment6.target=boolean\ isEmpty()
comment6.text=\n\ Fun\u00E7\u00E3o\ que\ testa\ se\ o\ Hipermercado\ se\ encontra\ vazio.\n\ @return\ boolean\n
comment7.params=ficheiro_clientes\ ficheiro_produtos\ ficheiro_vendas
comment7.target=DadosEstatisticos\ carregaDados(java.lang.String,\ java.lang.String,\ java.lang.String)
comment7.text=\n\ Fun\u00E7\u00E3o\ que\ faz\ a\ leitura\ dos\ ficheiros,\ carregando\ a\ informa\u00E7\u00E3o\ para\ o\ Hipermercado.\n\ @param\ ficheiro_clientes\n\ @param\ ficheiro_produtos\n\ @param\ ficheiro_vendas\n\ @return\ DadosEstatisticos\n
comment8.params=
comment8.target=void\ limpar()
comment8.text=\n\ Fun\u00E7\u00E3o\ para\ limpar\ o\ Hipermercado.\n
comment9.params=fich
comment9.target=void\ gravaObj(java.lang.String)
comment9.text=\n\ Gravar\ o\ estado\ da\ aplica\u00E7\u00E3o\ num\ determinado\ ficheiro.\n\ @param\ fich\n
numComments=23
