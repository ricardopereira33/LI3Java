#BlueJ class context
comment0.params=
comment0.target=InfoCliente()
comment0.text=\n\ Construtor\ vazio.\n
comment1.params=ic
comment1.target=InfoCliente(InfoCliente)
comment1.text=\n\ Construtor\ por\ c\u00F3pia.\n\ @param\ ic\n
comment2.params=v
comment2.target=void\ insereInfoC(Venda)
comment2.text=\ \n\ Insere\ uma\ determinada\ venda.\n\ @param\ v\n
comment3.params=
comment3.target=double\ getTotFact()
comment3.text=\ \n\ Retorna\ o\ total\ facturado.\n\ @return\ double\n
comment4.params=
comment4.target=java.util.Map\ getMeses()
comment4.text=\n\ Retorna\ os\ meses.\n\ @return\ Map<Integer,InfoMes>\n
comment5.params=indice
comment5.target=InfoMes\ getMesIndex(int)
comment5.text=\ \n\ Retorna\ a\ informa\u00E7\u00E3o\ relativa\ a\ um\ determinado\ m\u00EAs.\n\ @param\ indice\n\ @return\ InfoMes\n
comment6.params=
comment6.target=InfoCliente\ clone()
comment6.text=\n\ Fun\u00E7\u00E3o\ que\ faz\ clone.\n\ @return\ InfoCliente\n
comment7.params=obj
comment7.target=boolean\ equals(java.lang.Object)
comment7.text=\n\ Fun\u00E7\u00E3o\ que\ testa\ a\ igualdade.\n\ @param\ obj\n\ @return\ boolean\ \n
comment8.params=letra
comment8.target=int\ calculaIndice(char)
comment8.text=\ \n\ Calcula\ o\ indice\ relativo\ a\ uma\ determinada\ letra.\n\ @param\ letra\ \n\ @return\ int\n
numComments=9
